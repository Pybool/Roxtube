trigger:
  tags:
    include:
      - video-manager-api-*

variables:
  - group: "application-variable-group"

  - name: kubectlVersion
    value: "v1.26.3"

  - name: kustomizationPath
    value: "Deploy/kubernetes/video-manager-api"

  - name: devEnvName
    value: dev-environment

  - name: devImageRepository
    value: "video-manager-api"
  
  - name: devDockerBuildContext
    value: "$(Build.SourcesDirectory)/Backend"
    
  - name: devDockerfilePath
    value: "$(Build.SourcesDirectory)/Backend/Services/VideoManager/VideoManager.API/Dockerfile"

pool:
  # vmImage: ubuntu-latest
  name: default

stages:
  - stage: Build
    displayName: Build
    jobs:
      - template: templates/build-push-publish.yml
        parameters:
          dockerRegistryServiceConnection: $(devDockerRegistryServiceConnection)
          imageRepository: $(devImageRepository)
          dockerfilePath: $(devDockerfilePath)
          dockerBuildContext: $(devDockerBuildContext)
          imageTag: $(Build.SourceVersion)
          kustomizationPath: $(kustomizationPath)

  - stage: DeployToDevEnv
    displayName: Deploy to Dev Environment
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeployUsingKustomize
        displayName: Deploy using Kustomize
        environment: 
          name: ${{ variables.devEnvName }}
        strategy:
          runOnce:
            deploy:
               steps:
                - template: templates/deploy-using-kustomize.yml
                  parameters:
                    kubernetesServiceConnection: $(devKubernetesServiceConnection)
                    kubectlVersion: $(kubectlVersion)
                    kustomizationOverlayPath: $(devKustomizationOverlayPath)
                    domainName: $(devDomainName)
                    containerRegistryType: $(devContainerRegistry)
                    imageTag: $(Build.SourceVersion)
                    imagePullSecret: $(devImagePullSecret)